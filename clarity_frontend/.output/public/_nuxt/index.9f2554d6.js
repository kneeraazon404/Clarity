import { k as x, m as k, b as r, f as e, i as l, w as d, u as n, F as m, r as p, o as i, c as C, t as _, aq as b, bq as j, bc as F } from "./entry.658fd1b6.js"; import { X as $ } from "./index.3a29d7c1.js"; import { C as V, P as B } from "./index.b47d218d.js"; import { m as D, _ as w, B as I, v as y, j as M, V as S, X, Q as q } from "./FlatCardsWithDividers.e8121d7f.js"; const z = e("hr", { class: "lg:hidden mb-4" }, null, -1), N = { class: "bg-white" }, O = e("div", { class: "fixed inset-0 bg-black bg-opacity-25" }, null, -1), P = { class: "fixed inset-0 z-40 flex" }, T = { class: "flex items-center justify-between px-4" }, E = e("h2", { class: "text-4xl font-bold text-gray-900" }, "Filters", -1), L = e("span", { class: "sr-only" }, "Close menu", -1), Q = { class: "mt-4" }, U = { class: "w-full px-2" }, W = { class: "text-sm font-medium text-teal-700" }, A = { class: "ml-6 flex h-7 items-center" }, G = { class: "space-y-6" }, H = ["id", "name", "value"], J = ["for"], K = { class: "mx-auto max-w-2xl px-4 sm:py-2 sm:px-6 lg:max-w-7xl lg:px-8" }, R = { class: "lg:grid lg:grid-cols-3 lg:gap-x-8 xl:grid-cols-4" }, Y = e("h2", { class: "sr-only" }, "Filters", -1), Z = e("span", { class: "text-lg font-medium text-teal-700" }, "Filters", -1), ee = { class: "hidden lg:block" }, te = { class: "space-y-10 divide-y divide-gray-200" }, se = { class: "block text-lg font-bold text-gray-700" }, ae = { class: "space-y-3 pt-6" }, le = ["id", "name", "value"], ne = ["for"], oe = { class: "mt-6 lg:col-span-2 lg:mt-0 xl:col-span-3" }, ie = { components: { FlatCardsWithDividers: w }, setup() { return { checkedValues } } }, fe = Object.assign(ie, { __name: "index", setup(re) { const h = x([]), f = x(!1), v = x([]); return k(async () => { const g = await fetch("  http://localhost:8000:8000/api/v1/tags/"), o = await fetch("  http://localhost:8000:8000/api/v1/subtags/"), t = await fetch("  http://localhost:8000:8000/api/v1/founders/"), c = await g.json(), a = await o.json(), u = await t.json(); h.value = [{ id: "Tags", name: "Tags", options: c.map(s => ({ id: s.id, value: s.name, label: s.name })) }, { id: "Subtags", name: "Subtags", options: a.map(s => ({ id: s.id, value: s.sub_tag, label: s.sub_tag })) }, { id: "Founders", name: "Founders", options: u.map(s => ({ id: s.id, value: s.name, label: s.name })) }] }), (g, o) => (i(), r(m, null, [z, e("div", N, [e("div", null, [l(n(D), { as: "template", show: f.value }, { default: d(() => [l(n(I), { as: "div", class: "relative lg:hidden", onClose: o[1] || (o[1] = t => f.value = !1) }, { default: d(() => [l(n(y), { as: "template", enter: "transition-opacity ease-linear duration-300", "enter-from": "opacity-0", "enter-to": "opacity-100", leave: "transition-opacity ease-linear duration-300", "leave-from": "opacity-100", "leave-to": "opacity-0" }, { default: d(() => [O]), _: 1 }), e("div", P, [l(n(y), { as: "template", enter: "transition ease-in-out duration-300 transform", "enter-from": "translate-x-full", "enter-to": "translate-x-0", leave: "transition ease-in-out duration-300 transform", "leave-from": "translate-x-0", "leave-to": "translate-x-full" }, { default: d(() => [l(n(M), { class: "relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-6 shadow-xl" }, { default: d(() => [e("div", T, [E, e("button", { type: "button", class: "-mr-2 flex h-10 w-10 items-center justify-center p-2 text-gray-400 hover:text-gray-500", onClick: o[0] || (o[0] = t => f.value = !1) }, [L, l(n($), { class: "h-6 w-6", "aria-hidden": "true" })])]), e("form", Q, [(i(!0), r(m, null, p(h.value, t => (i(), C(n(q), { as: "div", key: t.name, class: "border-t border-gray-200 pt-4 pb-4" }, { default: d(({ open: c }) => [e("fieldset", null, [e("legend", U, [l(n(S), { class: "flex w-full items-center justify-between p-2 text-gray-400 hover:text-gray-500" }, { default: d(() => [e("span", W, _(t.name), 1), e("span", A, [l(n(V), { class: b([c ? "-rotate-180" : "rotate-0", "h-5 w-5 transform"]), "aria-hidden": "true" }, null, 8, ["class"])])]), _: 2 }, 1024)]), l(n(X), { class: "px-4 pt-4 pb-2" }, { default: d(() => [e("div", G, [(i(!0), r(m, null, p(t.options, (a, u) => (i(), r("div", { key: a.value, class: "flex items-center" }, [e("input", { id: `${t.id}-${u}-mobile`, name: `${t.id}[]`, value: a.value, type: "checkbox", class: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" }, null, 8, H), e("label", { for: `${t.id}-${u}-mobile`, class: "ml-3 text-sm text-gray-900" }, _(a.label), 9, J)]))), 128))])]), _: 2 }, 1024)])]), _: 2 }, 1024))), 128))])]), _: 1 })]), _: 1 })])]), _: 1 })]), _: 1 }, 8, ["show"]), e("main", K, [e("div", R, [e("aside", null, [Y, e("button", { type: "button", class: "inline-flex items-center lg:hidden", onClick: o[2] || (o[2] = t => f.value = !0) }, [Z, l(n(B), { class: "ml-1 h-5 w-5 flex-shrink-0 text-gray-400", "aria-hidden": "true" })]), e("div", ee, [e("form", te, [(i(!0), r(m, null, p(h.value, (t, c) => (i(), r("div", { key: t.id, class: b(c === 0 ? null : "pt-10") }, [e("fieldset", null, [e("legend", se, _(t.name), 1), e("div", ae, [(i(!0), r(m, null, p(t.options, (a, u) => (i(), r("div", { key: a.id, class: "flex items-center" }, [j(e("input", { id: a.id, name: a.name, value: a.value, type: "checkbox", "onUpdate:modelValue": o[3] || (o[3] = s => v.value = s), class: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" }, null, 8, le), [[F, v.value]]), e("label", { for: a.id, class: "ml-3 text-sm text-gray-900" }, _(a.label), 9, ne)]))), 128))])])], 2))), 128))])])]), e("div", oe, [e("div", null, [e("div", null, [l(w, { checkedValues: v.value }, null, 8, ["checkedValues"])])])])])])])])], 64)) } }); export { fe as default };
