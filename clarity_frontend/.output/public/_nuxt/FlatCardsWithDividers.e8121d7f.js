import { m as ee, n as Ye, f as ce, a as pe, H as E, o as P, E as Oe, b as z, u as k, d as ne, O as se, N, T as ze, t as j, p as be, l as R, y as Ke, c as Z, e as Y, g as _e, h as Qe, i as Xe, j as Je, k as Ze, S as q } from "./index.3a29d7c1.js"; import { p as T, k as v, N as g, q as L, F as ie, m as S, bk as te, aC as O, bl as H, aF as B, ad as _, T as et, aJ as tt, u as fe, aX as lt, ap as at, aq as nt, bv as ot, o as Q, b as X, f as $, r as De, i as $e, w as Le, h as rt, t as Pe, j as st } from "./entry.658fd1b6.js"; function it(e) { typeof queueMicrotask == "function" ? queueMicrotask(e) : Promise.resolve().then(e).catch(t => setTimeout(() => { throw t })) } var Ae = (e => (e[e.None = 1] = "None", e[e.InitialFocus = 2] = "InitialFocus", e[e.TabLock = 4] = "TabLock", e[e.FocusLock = 8] = "FocusLock", e[e.RestoreFocus = 16] = "RestoreFocus", e[e.All = 30] = "All", e))(Ae || {}); let J = Object.assign(T({ name: "FocusTrap", props: { as: { type: [Object, String], default: "div" }, initialFocus: { type: Object, default: null }, features: { type: Number, default: 30 }, containers: { type: Object, default: v(new Set) } }, inheritAttrs: !1, setup(e, { attrs: t, slots: a, expose: n }) { let o = v(null); n({ el: o, $el: o }); let l = g(() => ee(o)); ut({ ownerDocument: l }, g(() => Boolean(e.features & 16))); let r = dt({ ownerDocument: l, container: o, initialFocus: g(() => e.initialFocus) }, g(() => Boolean(e.features & 2))); ct({ ownerDocument: l, container: o, containers: e.containers, previousActiveElement: r }, g(() => Boolean(e.features & 8))); let s = Ye(); function i(d) { let p = P(o); p && (m => m())(() => { k(s.value, { [ne.Forwards]: () => { se(p, N.First, { skipElements: [d.relatedTarget] }) }, [ne.Backwards]: () => { se(p, N.Last, { skipElements: [d.relatedTarget] }) } }) }) } let u = v(!1); function c(d) { d.key === "Tab" && (u.value = !0, requestAnimationFrame(() => { u.value = !1 })) } function f(d) { var p; let m = new Set((p = e.containers) == null ? void 0 : p.value); m.add(o); let y = d.relatedTarget; y instanceof HTMLElement && y.dataset.headlessuiFocusGuard !== "true" && (Be(m, y) || (u.value ? se(P(o), k(s.value, { [ne.Forwards]: () => N.Next, [ne.Backwards]: () => N.Previous }) | N.WrapAround, { relativeTo: d.target }) : d.target instanceof HTMLElement && z(d.target))) } return () => { let d = {}, p = { ref: o, onKeydown: c, onFocusout: f }, { features: m, initialFocus: y, containers: x, ...A } = e; return L(ie, [Boolean(m & 4) && L(ce, { as: "button", type: "button", "data-headlessui-focus-guard": !0, onFocus: i, features: pe.Focusable }), E({ ourProps: p, theirProps: { ...t, ...A }, slot: d, attrs: t, slots: a, name: "FocusTrap" }), Boolean(m & 4) && L(ce, { as: "button", type: "button", "data-headlessui-focus-guard": !0, onFocus: i, features: pe.Focusable })]) } } }), { features: Ae }); function ut({ ownerDocument: e }, t) { let a = v(null); function n() { var l; a.value || (a.value = (l = e.value) == null ? void 0 : l.activeElement) } function o() { !a.value || (z(a.value), a.value = null) } S(() => { te(t, (l, r) => { l !== r && (l ? n() : o()) }, { immediate: !0 }) }), O(o) } function dt({ ownerDocument: e, container: t, initialFocus: a }, n) { let o = v(null), l = v(!1); return S(() => l.value = !0), O(() => l.value = !1), S(() => { te([t, a, n], (r, s) => { if (r.every((u, c) => (s == null ? void 0 : s[c]) === u) || !n.value) return; let i = P(t); !i || it(() => { var u, c; if (!l.value) return; let f = P(a), d = (u = e.value) == null ? void 0 : u.activeElement; if (f) { if (f === d) { o.value = d; return } } else if (i.contains(d)) { o.value = d; return } f ? z(f) : se(i, N.First | N.NoScroll) === ze.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), o.value = (c = e.value) == null ? void 0 : c.activeElement }) }, { immediate: !0, flush: "post" }) }), o } function ct({ ownerDocument: e, container: t, containers: a, previousActiveElement: n }, o) { var l; Oe((l = e.value) == null ? void 0 : l.defaultView, "focus", r => { if (!o.value) return; let s = new Set(a == null ? void 0 : a.value); s.add(t); let i = n.value; if (!i) return; let u = r.target; u && u instanceof HTMLElement ? Be(s, u) ? (n.value = u, z(u)) : (r.preventDefault(), r.stopPropagation(), z(i)) : z(n.value) }, !0) } function Be(e, t) { var a; for (let n of e) if ((a = n.value) != null && a.contains(t)) return !0; return !1 } let xe = "body > *", G = new Set, M = new Map; function Ce(e) { e.setAttribute("aria-hidden", "true"), e.inert = !0 } function Fe(e) { let t = M.get(e); !t || (t["aria-hidden"] === null ? e.removeAttribute("aria-hidden") : e.setAttribute("aria-hidden", t["aria-hidden"]), e.inert = t.inert) } function pt(e, t = v(!0)) { H(a => { if (!t.value || !e.value) return; let n = e.value, o = ee(n); if (o) { G.add(n); for (let l of M.keys()) l.contains(n) && (Fe(l), M.delete(l)); o.querySelectorAll(xe).forEach(l => { if (l instanceof HTMLElement) { for (let r of G) if (l.contains(r)) return; G.size === 1 && (M.set(l, { "aria-hidden": l.getAttribute("aria-hidden"), inert: l.inert }), Ce(l)) } }), a(() => { if (G.delete(n), G.size > 0) o.querySelectorAll(xe).forEach(l => { if (l instanceof HTMLElement && !M.has(l)) { for (let r of G) if (l.contains(r)) return; M.set(l, { "aria-hidden": l.getAttribute("aria-hidden"), inert: l.inert }), Ce(l) } }); else for (let l of M.keys()) Fe(l), M.delete(l) }) } }) } let Re = Symbol("ForcePortalRootContext"); function ft() { return _(Re, !1) } let ve = T({ name: "ForcePortalRoot", props: { as: { type: [Object, String], default: "template" }, force: { type: Boolean, default: !1 } }, setup(e, { slots: t, attrs: a }) { return B(Re, e.force), () => { let { force: n, ...o } = e; return E({ theirProps: o, ourProps: {}, slot: {}, slots: t, attrs: a, name: "ForcePortalRoot" }) } } }); function vt(e) { let t = ee(e); if (!t) { if (e === null) return null; throw new Error(`[Headless UI]: Cannot find ownerDocument for contextElement: ${e}`) } let a = t.getElementById("headlessui-portal-root"); if (a) return a; let n = t.createElement("div"); return n.setAttribute("id", "headlessui-portal-root"), t.body.appendChild(n) } let je = T({ name: "Portal", props: { as: { type: [Object, String], default: "div" } }, setup(e, { slots: t, attrs: a }) { let n = v(null), o = g(() => ee(n)), l = ft(), r = _(Ie, null), s = v(l === !0 || r == null ? vt(n.value) : r.resolveTarget()); return H(() => { l || r != null && (s.value = r.resolveTarget()) }), O(() => { var i, u; let c = (i = o.value) == null ? void 0 : i.getElementById("headlessui-portal-root"); !c || s.value === c && s.value.children.length <= 0 && ((u = s.value.parentElement) == null || u.removeChild(s.value)) }), () => { if (s.value === null) return null; let i = { ref: n, "data-headlessui-portal": "" }; return L(et, { to: s.value }, E({ ourProps: i, theirProps: e, slot: {}, attrs: a, slots: t, name: "Portal" })) } } }), Ie = Symbol("PortalGroupContext"), mt = T({ name: "PortalGroup", props: { as: { type: [Object, String], default: "template" }, target: { type: Object, default: null } }, setup(e, { attrs: t, slots: a }) { let n = tt({ resolveTarget() { return e.target } }); return B(Ie, n), () => { let { target: o, ...l } = e; return E({ theirProps: l, ourProps: {}, slot: {}, attrs: t, slots: a, name: "PortalGroup" }) } } }), Me = Symbol("StackContext"); var me = (e => (e[e.Add = 0] = "Add", e[e.Remove = 1] = "Remove", e))(me || {}); function gt() { return _(Me, () => { }) } function ht({ type: e, enabled: t, element: a, onUpdate: n }) { let o = gt(); function l(...r) { n == null || n(...r), o(...r) } S(() => { te(t, (r, s) => { r ? l(0, e, a) : s === !0 && l(1, e, a) }, { immediate: !0, flush: "sync" }) }), O(() => { t.value && l(1, e, a) }), B(Me, l) } let He = Symbol("DescriptionContext"); function bt() { let e = _(He, null); if (e === null) throw new Error("Missing parent"); return e } function yt({ slot: e = v({}), name: t = "Description", props: a = {} } = {}) { let n = v([]); function o(l) { return n.value.push(l), () => { let r = n.value.indexOf(l); r !== -1 && n.value.splice(r, 1) } } return B(He, { register: o, slot: e, name: t, props: a }), g(() => n.value.length > 0 ? n.value.join(" ") : void 0) } let rl = T({ name: "Description", props: { as: { type: [Object, String], default: "p" }, id: { type: String, default: () => `headlessui-description-${j()}` } }, setup(e, { attrs: t, slots: a }) { let n = bt(); return S(() => O(n.register(e.id))), () => { let { name: o = "Description", slot: l = v({}), props: r = {} } = n, { id: s, ...i } = e, u = { ...Object.entries(r).reduce((c, [f, d]) => Object.assign(c, { [f]: fe(d) }), {}), id: s }; return E({ ourProps: u, theirProps: i, slot: l.value, attrs: t, slots: a, name: o }) } } }); function wt(e) { let t = lt(e.getSnapshot()); return O(e.subscribe(() => { t.value = e.getSnapshot() })), t } function ye() { let e = [], t = [], a = { enqueue(n) { t.push(n) }, addEventListener(n, o, l, r) { return n.addEventListener(o, l, r), a.add(() => n.removeEventListener(o, l, r)) }, requestAnimationFrame(...n) { let o = requestAnimationFrame(...n); a.add(() => cancelAnimationFrame(o)) }, nextFrame(...n) { a.requestAnimationFrame(() => { a.requestAnimationFrame(...n) }) }, setTimeout(...n) { let o = setTimeout(...n); a.add(() => clearTimeout(o)) }, add(n) { e.push(n) }, style(n, o, l) { let r = n.style.getPropertyValue(o); return Object.assign(n.style, { [o]: l }), this.add(() => { Object.assign(n.style, { [o]: r }) }) }, dispose() { for (let n of e.splice(0)) n() }, async workQueue() { for (let n of t.splice(0)) await n() } }; return a } function St(e, t) { let a = e(), n = new Set; return { getSnapshot() { return a }, subscribe(o) { return n.add(o), () => n.delete(o) }, dispatch(o, ...l) { let r = t[o].call(a, ...l); r && (a = r, n.forEach(s => s())) } } } function Et() { let e; return { before({ doc: t }) { var a; let n = t.documentElement; e = ((a = t.defaultView) != null ? a : window).innerWidth - n.clientWidth }, after({ doc: t, d: a }) { let n = t.documentElement, o = n.clientWidth - n.offsetWidth, l = e - o; a.style(n, "paddingRight", `${l}px`) } } } function Tt() { return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0 } function Dt() { if (!Tt()) return {}; let e; return { before() { e = window.pageYOffset }, after({ doc: t, d: a, meta: n }) { function o(r) { return n.containers.flatMap(s => s()).some(s => s.contains(r)) } a.style(t.body, "marginTop", `-${e}px`), window.scrollTo(0, 0); let l = null; a.addEventListener(t, "click", r => { if (r.target instanceof HTMLElement) try { let s = r.target.closest("a"); if (!s) return; let { hash: i } = new URL(s.href), u = t.querySelector(i); u && !o(u) && (l = u) } catch { } }, !0), a.addEventListener(t, "touchmove", r => { r.target instanceof HTMLElement && !o(r.target) && r.preventDefault() }, { passive: !1 }), a.add(() => { window.scrollTo(0, window.pageYOffset + e), l && l.isConnected && (l.scrollIntoView({ block: "nearest" }), l = null) }) } } } function $t() { return { before({ doc: e, d: t }) { t.style(e.documentElement, "overflow", "hidden") } } } function Lt(e) { let t = {}; for (let a of e) Object.assign(t, a(t)); return t } let W = St(() => new Map, { PUSH(e, t) { var a; let n = (a = this.get(e)) != null ? a : { doc: e, count: 0, d: ye(), meta: new Set }; return n.count++, n.meta.add(t), this.set(e, n), this }, POP(e, t) { let a = this.get(e); return a && (a.count--, a.meta.delete(t)), this }, SCROLL_PREVENT({ doc: e, d: t, meta: a }) { let n = { doc: e, d: t, meta: Lt(a) }, o = [Dt(), Et(), $t()]; o.forEach(({ before: l }) => l == null ? void 0 : l(n)), o.forEach(({ after: l }) => l == null ? void 0 : l(n)) }, SCROLL_ALLOW({ d: e }) { e.dispose() }, TEARDOWN({ doc: e }) { this.delete(e) } }); W.subscribe(() => { let e = W.getSnapshot(), t = new Map; for (let [a] of e) t.set(a, a.documentElement.style.overflow); for (let a of e.values()) { let n = t.get(a.doc) === "hidden", o = a.count !== 0; (o && !n || !o && n) && W.dispatch(a.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", a), a.count === 0 && W.dispatch("TEARDOWN", a) } }); function Pt(e, t, a) { let n = wt(W), o = g(() => { let l = e.value ? n.value.get(e.value) : void 0; return l ? l.count > 0 : !1 }); return te([e, t], ([l, r], [s], i) => { if (!l || !r) return; W.dispatch("PUSH", l, a); let u = !1; i(() => { u || (W.dispatch("POP", s ?? l, a), u = !0) }) }, { immediate: !0 }), o } var xt = (e => (e[e.Open = 0] = "Open", e[e.Closed = 1] = "Closed", e))(xt || {}); let ge = Symbol("DialogContext"); function le(e) { let t = _(ge, null); if (t === null) { let a = new Error(`<${e} /> is missing a parent <Dialog /> component.`); throw Error.captureStackTrace && Error.captureStackTrace(a, le), a } return t } let oe = "DC8F892D-2EBD-447C-A4C8-A03058436FF4", sl = T({ name: "Dialog", inheritAttrs: !1, props: { as: { type: [Object, String], default: "div" }, static: { type: Boolean, default: !1 }, unmount: { type: Boolean, default: !0 }, open: { type: [Boolean, String], default: oe }, initialFocus: { type: Object, default: null }, id: { type: String, default: () => `headlessui-dialog-${j()}` } }, emits: { close: e => !0 }, setup(e, { emit: t, attrs: a, slots: n, expose: o }) { var l; let r = v(!1); S(() => { r.value = !0 }); let s = v(0), i = be(), u = g(() => e.open === oe && i !== null ? k(i.value, { [R.Open]: !0, [R.Closed]: !1 }) : e.open), c = v(new Set), f = v(null), d = v(null), p = g(() => ee(f)); if (o({ el: f, $el: f }), !(e.open !== oe || i !== null)) throw new Error("You forgot to provide an `open` prop to the `Dialog`."); if (typeof u.value != "boolean") throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${u.value === oe ? void 0 : e.open}`); let m = g(() => r.value && u.value ? 0 : 1), y = g(() => m.value === 0), x = g(() => s.value > 1); _(ge, null); let A = g(() => x.value ? "parent" : "leaf"); pt(f, g(() => x.value ? y.value : !1)), ht({ type: "Dialog", enabled: g(() => m.value === 0), element: f, onUpdate: (h, w, b) => { if (w === "Dialog") return k(h, { [me.Add]() { c.value.add(b), s.value += 1 }, [me.Remove]() { c.value.delete(b), s.value -= 1 } }) } }); let K = yt({ name: "DialogDescription", slot: g(() => ({ open: u.value })) }), I = v(null), F = { titleId: I, panelRef: v(null), dialogState: m, setTitleId(h) { I.value !== h && (I.value = h) }, close() { t("close", !1) } }; B(ge, F); function ae() { var h, w, b; return [...Array.from((w = (h = p.value) == null ? void 0 : h.querySelectorAll("html > *, body > *, [data-headlessui-portal]")) != null ? w : []).filter(C => !(C === document.body || C === document.head || !(C instanceof HTMLElement) || C.contains(P(d)) || F.panelRef.value && C.contains(F.panelRef.value))), (b = F.panelRef.value) != null ? b : f.value] } return Ke(() => ae(), (h, w) => { F.close(), at(() => w == null ? void 0 : w.focus()) }, g(() => m.value === 0 && !x.value)), Oe((l = p.value) == null ? void 0 : l.defaultView, "keydown", h => { h.defaultPrevented || h.key === Y.Escape && m.value === 0 && (x.value || (h.preventDefault(), h.stopPropagation(), F.close())) }), Pt(p, y, h => { var w; return { containers: [...(w = h.containers) != null ? w : [], ae] } }), H(h => { if (m.value !== 0) return; let w = P(f); if (!w) return; let b = new IntersectionObserver(C => { for (let D of C) D.boundingClientRect.x === 0 && D.boundingClientRect.y === 0 && D.boundingClientRect.width === 0 && D.boundingClientRect.height === 0 && F.close() }); b.observe(w), h(() => b.disconnect()) }), () => { let { id: h, open: w, initialFocus: b, ...C } = e, D = { ...a, ref: f, id: h, role: "dialog", "aria-modal": m.value === 0 ? !0 : void 0, "aria-labelledby": I.value, "aria-describedby": K.value }, U = { open: m.value === 0 }; return L(ve, { force: !0 }, () => [L(je, () => L(mt, { target: f.value }, () => L(ve, { force: !1 }, () => L(J, { initialFocus: b, containers: c, features: y.value ? k(A.value, { parent: J.features.RestoreFocus, leaf: J.features.All & ~J.features.FocusLock }) : J.features.None }, () => E({ ourProps: D, theirProps: C, slot: U, attrs: a, slots: n, visible: m.value === 0, features: Z.RenderStrategy | Z.Static, name: "Dialog" }))))), L(ce, { features: pe.Hidden, ref: d })]) } } }); T({ name: "DialogOverlay", props: { as: { type: [Object, String], default: "div" }, id: { type: String, default: () => `headlessui-dialog-overlay-${j()}` } }, setup(e, { attrs: t, slots: a }) { let n = le("DialogOverlay"); function o(l) { l.target === l.currentTarget && (l.preventDefault(), l.stopPropagation(), n.close()) } return () => { let { id: l, ...r } = e; return E({ ourProps: { id: l, "aria-hidden": !0, onClick: o }, theirProps: r, slot: { open: n.dialogState.value === 0 }, attrs: t, slots: a, name: "DialogOverlay" }) } } }); T({ name: "DialogBackdrop", props: { as: { type: [Object, String], default: "div" }, id: { type: String, default: () => `headlessui-dialog-backdrop-${j()}` } }, inheritAttrs: !1, setup(e, { attrs: t, slots: a, expose: n }) { let o = le("DialogBackdrop"), l = v(null); return n({ el: l, $el: l }), S(() => { if (o.panelRef.value === null) throw new Error("A <DialogBackdrop /> component is being used, but a <DialogPanel /> component is missing.") }), () => { let { id: r, ...s } = e, i = { id: r, ref: l, "aria-hidden": !0 }; return L(ve, { force: !0 }, () => L(je, () => E({ ourProps: i, theirProps: { ...t, ...s }, slot: { open: o.dialogState.value === 0 }, attrs: t, slots: a, name: "DialogBackdrop" }))) } } }); let il = T({ name: "DialogPanel", props: { as: { type: [Object, String], default: "div" }, id: { type: String, default: () => `headlessui-dialog-panel-${j()}` } }, setup(e, { attrs: t, slots: a, expose: n }) { let o = le("DialogPanel"); n({ el: o.panelRef, $el: o.panelRef }); function l(r) { r.stopPropagation() } return () => { let { id: r, ...s } = e, i = { id: r, ref: o.panelRef, onClick: l }; return E({ ourProps: i, theirProps: s, slot: { open: o.dialogState.value === 0 }, attrs: t, slots: a, name: "DialogPanel" }) } } }); T({ name: "DialogTitle", props: { as: { type: [Object, String], default: "h2" }, id: { type: String, default: () => `headlessui-dialog-title-${j()}` } }, setup(e, { attrs: t, slots: a }) { let n = le("DialogTitle"); return S(() => { n.setTitleId(e.id), O(() => n.setTitleId(null)) }), () => { let { id: o, ...l } = e; return E({ ourProps: { id: o }, theirProps: l, slot: { open: n.dialogState.value === 0 }, attrs: t, slots: a, name: "DialogTitle" }) } } }); var Ct = (e => (e[e.Open = 0] = "Open", e[e.Closed = 1] = "Closed", e))(Ct || {}); let Ve = Symbol("DisclosureContext"); function we(e) { let t = _(Ve, null); if (t === null) { let a = new Error(`<${e} /> is missing a parent <Disclosure /> component.`); throw Error.captureStackTrace && Error.captureStackTrace(a, we), a } return t } let Ne = Symbol("DisclosurePanelContext"); function Ft() { return _(Ne, null) } let ul = T({ name: "Disclosure", props: { as: { type: [Object, String], default: "template" }, defaultOpen: { type: [Boolean], default: !1 } }, setup(e, { slots: t, attrs: a }) { let n = v(e.defaultOpen ? 0 : 1), o = v(null), l = v(null), r = { buttonId: v(null), panelId: v(null), disclosureState: n, panel: o, button: l, toggleDisclosure() { n.value = k(n.value, { [0]: 1, [1]: 0 }) }, closeDisclosure() { n.value !== 1 && (n.value = 1) }, close(s) { r.closeDisclosure(); let i = (() => s ? s instanceof HTMLElement ? s : s.value instanceof HTMLElement ? P(s) : P(r.button) : P(r.button))(); i == null || i.focus() } }; return B(Ve, r), _e(g(() => k(n.value, { [0]: R.Open, [1]: R.Closed }))), () => { let { defaultOpen: s, ...i } = e, u = { open: n.value === 0, close: r.close }; return E({ theirProps: i, ourProps: {}, slot: u, slots: t, attrs: a, name: "Disclosure" }) } } }), dl = T({ name: "DisclosureButton", props: { as: { type: [Object, String], default: "button" }, disabled: { type: [Boolean], default: !1 }, id: { type: String, default: () => `headlessui-disclosure-button-${j()}` } }, setup(e, { attrs: t, slots: a, expose: n }) { let o = we("DisclosureButton"); S(() => { o.buttonId.value = e.id }), O(() => { o.buttonId.value = null }); let l = Ft(), r = g(() => l === null ? !1 : l.value === o.panelId.value), s = v(null); n({ el: s, $el: s }), r.value || H(() => { o.button.value = s.value }); let i = Qe(g(() => ({ as: e.as, type: t.type })), s); function u() { var d; e.disabled || (r.value ? (o.toggleDisclosure(), (d = P(o.button)) == null || d.focus()) : o.toggleDisclosure()) } function c(d) { var p; if (!e.disabled) if (r.value) switch (d.key) { case Y.Space: case Y.Enter: d.preventDefault(), d.stopPropagation(), o.toggleDisclosure(), (p = P(o.button)) == null || p.focus(); break } else switch (d.key) { case Y.Space: case Y.Enter: d.preventDefault(), d.stopPropagation(), o.toggleDisclosure(); break } } function f(d) { switch (d.key) { case Y.Space: d.preventDefault(); break } } return () => { let d = { open: o.disclosureState.value === 0 }, { id: p, ...m } = e, y = r.value ? { ref: s, type: i.value, onClick: u, onKeydown: c } : { id: p, ref: s, type: i.value, "aria-expanded": e.disabled ? void 0 : o.disclosureState.value === 0, "aria-controls": P(o.panel) ? o.panelId.value : void 0, disabled: e.disabled ? !0 : void 0, onClick: u, onKeydown: c, onKeyup: f }; return E({ ourProps: y, theirProps: m, slot: d, attrs: t, slots: a, name: "DisclosureButton" }) } } }), cl = T({ name: "DisclosurePanel", props: { as: { type: [Object, String], default: "div" }, static: { type: Boolean, default: !1 }, unmount: { type: Boolean, default: !0 }, id: { type: String, default: () => `headlessui-disclosure-panel-${j()}` } }, setup(e, { attrs: t, slots: a, expose: n }) { let o = we("DisclosurePanel"); S(() => { o.panelId.value = e.id }), O(() => { o.panelId.value = null }), n({ el: o.panel, $el: o.panel }), B(Ne, o.panelId); let l = be(), r = g(() => l !== null ? l.value === R.Open : o.disclosureState.value === 0); return () => { let s = { open: o.disclosureState.value === 0, close: o.close }, { id: i, ...u } = e, c = { id: i, ref: o.panel }; return E({ ourProps: c, theirProps: u, slot: s, attrs: t, slots: a, features: Z.RenderStrategy | Z.Static, visible: r.value, name: "DisclosurePanel" }) } } }); function kt(e) { let t = { called: !1 }; return (...a) => { if (!t.called) return t.called = !0, e(...a) } } function de(e, ...t) { e && t.length > 0 && e.classList.add(...t) } function re(e, ...t) { e && t.length > 0 && e.classList.remove(...t) } var he = (e => (e.Finished = "finished", e.Cancelled = "cancelled", e))(he || {}); function Ot(e, t) { let a = ye(); if (!e) return a.dispose; let { transitionDuration: n, transitionDelay: o } = getComputedStyle(e), [l, r] = [n, o].map(s => { let [i = 0] = s.split(",").filter(Boolean).map(u => u.includes("ms") ? parseFloat(u) : parseFloat(u) * 1e3).sort((u, c) => c - u); return i }); return l !== 0 ? a.setTimeout(() => t("finished"), l + r) : t("finished"), a.add(() => t("cancelled")), a.dispose } function ke(e, t, a, n, o, l) { let r = ye(), s = l !== void 0 ? kt(l) : () => { }; return re(e, ...o), de(e, ...t, ...a), r.nextFrame(() => { re(e, ...a), de(e, ...n), r.add(Ot(e, i => (re(e, ...n, ...t), de(e, ...o), s(i)))) }), r.add(() => re(e, ...t, ...a, ...n, ...o)), r.add(() => s("cancelled")), r.dispose } function V(e = "") { return e.split(" ").filter(t => t.trim().length > 1) } let Se = Symbol("TransitionContext"); var _t = (e => (e.Visible = "visible", e.Hidden = "hidden", e))(_t || {}); function At() { return _(Se, null) !== null } function Bt() { let e = _(Se, null); if (e === null) throw new Error("A <TransitionChild /> is used but it is missing a parent <TransitionRoot />."); return e } function Rt() { let e = _(Ee, null); if (e === null) throw new Error("A <TransitionChild /> is used but it is missing a parent <TransitionRoot />."); return e } let Ee = Symbol("NestingContext"); function ue(e) { return "children" in e ? ue(e.children) : e.value.filter(({ state: t }) => t === "visible").length > 0 } function qe(e) { let t = v([]), a = v(!1); S(() => a.value = !0), O(() => a.value = !1); function n(l, r = q.Hidden) { let s = t.value.findIndex(({ id: i }) => i === l); s !== -1 && (k(r, { [q.Unmount]() { t.value.splice(s, 1) }, [q.Hidden]() { t.value[s].state = "hidden" } }), !ue(t) && a.value && (e == null || e())) } function o(l) { let r = t.value.find(({ id: s }) => s === l); return r ? r.state !== "visible" && (r.state = "visible") : t.value.push({ id: l, state: "visible" }), () => n(l, q.Unmount) } return { children: t, register: o, unregister: n } } let We = Z.RenderStrategy, jt = T({ props: { as: { type: [Object, String], default: "div" }, show: { type: [Boolean], default: null }, unmount: { type: [Boolean], default: !0 }, appear: { type: [Boolean], default: !1 }, enter: { type: [String], default: "" }, enterFrom: { type: [String], default: "" }, enterTo: { type: [String], default: "" }, entered: { type: [String], default: "" }, leave: { type: [String], default: "" }, leaveFrom: { type: [String], default: "" }, leaveTo: { type: [String], default: "" } }, emits: { beforeEnter: () => !0, afterEnter: () => !0, beforeLeave: () => !0, afterLeave: () => !0 }, setup(e, { emit: t, attrs: a, slots: n, expose: o }) { if (!At() && Xe()) return () => L(Mt, { ...e, onBeforeEnter: () => t("beforeEnter"), onAfterEnter: () => t("afterEnter"), onBeforeLeave: () => t("beforeLeave"), onAfterLeave: () => t("afterLeave") }, n); let l = v(null), r = v("visible"), s = g(() => e.unmount ? q.Unmount : q.Hidden); o({ el: l, $el: l }); let { show: i, appear: u } = Bt(), { register: c, unregister: f } = Rt(), d = { value: !0 }, p = j(), m = { value: !1 }, y = qe(() => { m.value || (r.value = "hidden", f(p), t("afterLeave")) }); S(() => { let b = c(p); O(b) }), H(() => { if (s.value === q.Hidden && p) { if (i && r.value !== "visible") { r.value = "visible"; return } k(r.value, { hidden: () => f(p), visible: () => c(p) }) } }); let x = V(e.enter), A = V(e.enterFrom), K = V(e.enterTo), I = V(e.entered), F = V(e.leave), ae = V(e.leaveFrom), h = V(e.leaveTo); S(() => { H(() => { if (r.value === "visible") { let b = P(l); if (b instanceof Comment && b.data === "") throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?") } }) }); function w(b) { let C = d.value && !u.value, D = P(l); !D || !(D instanceof HTMLElement) || C || (m.value = !0, i.value && t("beforeEnter"), i.value || t("beforeLeave"), b(i.value ? ke(D, x, A, K, I, U => { m.value = !1, U === he.Finished && t("afterEnter") }) : ke(D, F, ae, h, I, U => { m.value = !1, U === he.Finished && (ue(y) || (r.value = "hidden", f(p), t("afterLeave"))) }))) } return S(() => { te([i], (b, C, D) => { w(D), d.value = !1 }, { immediate: !0 }) }), B(Ee, y), _e(g(() => k(r.value, { visible: R.Open, hidden: R.Closed }))), () => { let { appear: b, show: C, enter: D, enterFrom: U, enterTo: Zt, entered: el, leave: tl, leaveFrom: ll, leaveTo: al, ...Te } = e, Ue = { ref: l }, Ge = { ...Te, ...u && i && Je.isServer ? { class: nt([Te.class, ...x, ...A]) } : {} }; return E({ theirProps: Ge, ourProps: Ue, slot: {}, slots: n, attrs: a, features: We, visible: r.value === "visible", name: "TransitionChild" }) } } }), It = jt, Mt = T({ inheritAttrs: !1, props: { as: { type: [Object, String], default: "div" }, show: { type: [Boolean], default: null }, unmount: { type: [Boolean], default: !0 }, appear: { type: [Boolean], default: !1 }, enter: { type: [String], default: "" }, enterFrom: { type: [String], default: "" }, enterTo: { type: [String], default: "" }, entered: { type: [String], default: "" }, leave: { type: [String], default: "" }, leaveFrom: { type: [String], default: "" }, leaveTo: { type: [String], default: "" } }, emits: { beforeEnter: () => !0, afterEnter: () => !0, beforeLeave: () => !0, afterLeave: () => !0 }, setup(e, { emit: t, attrs: a, slots: n }) { let o = be(), l = g(() => e.show === null && o !== null ? k(o.value, { [R.Open]: !0, [R.Closed]: !1 }) : e.show); H(() => { if (![!0, !1].includes(l.value)) throw new Error('A <Transition /> is used but it is missing a `:show="true | false"` prop.') }); let r = v(l.value ? "visible" : "hidden"), s = qe(() => { r.value = "hidden" }), i = v(!0), u = { show: l, appear: g(() => e.appear || !i.value) }; return S(() => { H(() => { i.value = !1, l.value ? r.value = "visible" : ue(s) || (r.value = "hidden") }) }), B(Ee, s), B(Se, u), () => { let c = Ze(e, ["show", "appear", "unmount", "onBeforeEnter", "onBeforeLeave", "onAfterEnter", "onAfterLeave"]), f = { unmount: e.unmount }; return E({ ourProps: { ...f, as: "template" }, theirProps: {}, slot: {}, slots: { ...n, default: () => [L(It, { onBeforeEnter: () => t("beforeEnter"), onAfterEnter: () => t("afterEnter"), onBeforeLeave: () => t("beforeLeave"), onAfterLeave: () => t("afterLeave"), ...a, ...f, ...c }, n.default)] }, attrs: {}, features: We, visible: r.value === "visible", name: "Transition" }) } } }); const Ht = ot({ id: "company", state: () => ({ items: [], tag: [], tags: [], loading: !0, filter: "", loadCount: 10 }), actions: { fetchTags: async function () { const e = await fetch("  http://localhost:8000:8000/api/v1/tags/"); this.tags = await e.json(), this.loading = !1 }, fetchData: async function () { this.loading = !0; const e = await fetch("  http://localhost:8000:8000/api/v1/companies/"); this.items = await e.json(), this.loading = !1 }, loadMore: async function () { this.loading = !0, this.loadCount += 8, this.loading = !1 } }, getters: { filteredItems: function () { const e = this.filter.toLowerCase().split(" "); return this.items.filter(t => { const a = t.company_name.toLowerCase() + " " + t.short_description.toLowerCase() + " " + t.description.toLowerCase(); return e.every(n => a.includes(n)) }).slice(0, this.loadCount) } } }), Vt = { class: "px-4 py-4 bg-teal-50 border rounded-xl my-6 shadow-sm" }, Nt = { class: "relative" }, qt = ["value", "placeholder"], Wt = { class: "rounded-xl border border-gray-200 bg-white" }, Ut = { role: "list", class: "divide-y divide-gray-300" }, Gt = { class: "lg:flex block items-center justify-between" }, Yt = ["src"], zt = { class: "md:px-4 px-2" }, Kt = { class: "font-bold text-lg text-gray-700 hover:text-gray-600" }, Qt = ["innerHTML"], Xt = { class: "flex items-center space-x-2" }, Jt = { class: "inline-flex items-center justify-center px-2 py-1 font-medium leading-4 text-gray-600 bg-gray-200 rounded-md text-xs md:text-sm" }, pl = { __name: "FlatCardsWithDividers", props: { checkedValues: { type: Array, required: !0 } }, setup(e) { const t = e, a = Ht(), n = c => c.length > 200 ? c.substring(0, 200) + "..." : c, o = g({ get: () => a.filter, set: c => a.filter = c }); S(() => { a.fetchData(), a.fetchTags() }); const l = () => { a.loadMore() }, r = g(() => t.checkedValues), s = v(""), i = g(() => { const c = o.value.trim(), f = r.value.join(" "), d = s.value.trim().toLowerCase(); let p = ""; return c && (p += c + " "), f && (p += f + " "), d && (p += d), p.trim() || "Type to filter..." }), u = g(() => { let c = a.filteredItems; const f = o.value.trim(), d = r.value.join(" "), p = s.value; let m = ""; f && (m += f + " "), d && (m += d + " "), p && (m += p); const y = m.trim().replace(/\.\.\./g, "").split(/\s+/); return c = c.filter(x => y.every(A => x.company_name.toLowerCase().indexOf(A.toLowerCase()) > -1)), y.length > 0 && (c = c.filter(x => { const A = x.company_name.toLowerCase(), K = x.description.toLowerCase(); return y.filter(F => A.includes(F) || K.includes(F)).length === y.length })), c }); return (c, f) => { const d = st; return Q(), X(ie, null, [$("div", Vt, [$("div", Nt, [$("input", { class: "search__input w-full rounded", type: "text", value: s.value, onInput: f[0] || (f[0] = p => s.value.value = p.target.value.trim().toLowerCase()), placeholder: fe(i) || "Type to filter..." }, null, 40, qt)])]), $("div", Wt, [$("ul", Ut, [(Q(!0), X(ie, null, De(fe(u), p => (Q(), X("li", { key: p.id, class: "py-4 px-1" }, [$e(d, { to: `/companies/${p.id}/` }, { default: Le(() => [$("div", Gt, [$("div", null, [$("img", { class: "h-auto w-auto object-cover rounded-full lg:block mx-auto my-0 p-2", src: p.logo ? p.logo : "https://bookface-images.s3.amazonaws.com/small_logos/d8427e9e647b115fc9f1f760c7a1324f1d2c02ef.png", alt: "company logo" }, null, 8, Yt)]), $("div", zt, [$("p", Kt, [$e(d, { to: `/companies/${p.id}` }, { default: Le(() => [rt(Pe(p.company_name), 1)]), _: 2 }, 1032, ["to"])]), $("div", { class: "text-gray-600 py-2 text-sm md:text-md", innerHTML: n(p.description) }, null, 8, Qt), $("div", Xt, [(Q(!0), X(ie, null, De(p.tag, m => (Q(), X("div", { class: "flex items-center space-x-2", key: m.id }, [$("span", Jt, Pe(m.name), 1)]))), 128))])])])]), _: 2 }, 1032, ["to"])]))), 128))])]), $("button", { class: "bg-teal-800 hover:bg-teal-700 text-white text-center font-bold py-3 px-12 m-4 items-center rounded focus:outline-none focus:shadow-outline", onClick: l }, " Load More ")], 64) } } }; export { sl as B, ul as Q, dl as V, cl as X, pl as _, il as j, Mt as m, jt as v };
