{"version":3,"file":"FlatCardsWithDividers-ae219192.js","sources":["../../../../components/FlatCardsWithDividers.vue"],"sourcesContent":["<template>\n  <div class=\"px-4 py-4 bg-teal-50 border rounded-xl my-6 shadow-sm\">\n    <div class=\"relative\">\n      <input\n        class=\"search__input w-full rounded-lg border-gray-400\"\n        type=\"text\"\n        @input=\"searchInputValue = $event.target.value.trim().toLowerCase()\"\n        :placeholder=\"filterWithCheckedValuesAndSearchInput || 'Type to filter...'\"\n        v-model=\"filter\"\n      />\n    </div>\n  </div>\n\n  <div class=\"rounded-xl border border-gray-200 bg-white\">\n    <ul role=\"list\" class=\"divide-y divide-gray-300\">\n      <li v-for=\"company in filteredItems\" :key=\"company.id\" class=\"py-4 px-1\">\n        <NuxtLink :to=\"`/companies/${company.id}/`\">\n          <div class=\"lg:flex block items-center justify-between\">\n            <div>\n              <img\n                class=\"h-auto w-auto object-cover rounded-full hidden lg:block mx-auto my-0 p-2\"\n                :src=\"company.logo ? company.logo : ''\"\n                alt=\" logo N/A\"\n              />\n            </div>\n            <div class=\"md:px-4 px-2\">\n              <p class=\"font-bold text-lg text-gray-700 hover:text-gray-600\">\n                <NuxtLink :to=\"`/companies/${company.id}`\">{{\n                  company.company_name\n                }}</NuxtLink>\n              </p>\n              <div\n                class=\"text-gray-600 py-2 text-sm md:text-md\"\n                v-html=\"companyDescription(company.description)\"\n              ></div>\n\n              <div class=\"flex items-center space-x-2\">\n                <div\n                  v-for=\"item in tags\"\n                  class=\"flex items-center space-x-2\"\n                  :key=\"item.id\"\n                >\n                  <span\n                    class=\"inline-flex items-center justify-center px-2 py-1 font-medium leading-4 text-gray-600 bg-gray-200 rounded-md text-xs md:text-sm\"\n                  >\n                    {{ item.name }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </NuxtLink>\n      </li>\n    </ul>\n  </div>\n  <button\n    class=\"bg-teal-800 hover:bg-teal-700 text-white text-center font-bold py-3 px-12 m-4 items-center rounded focus:outline-none focus:shadow-outline\"\n    @click=\"loadMore\"\n  >\n    Load More\n  </button>\n</template>\n<script setup>\nimport { companyStore } from \"~~/stores/CompanyStore.js\";\nimport { computed, defineProps, onMounted, ref } from \"vue\";\n\nconst store = companyStore();\nconst tags = computed(() => {\n  if (store.tags.length > 4) {\n    return store.tags.slice(4, 7);\n  } else {\n    return [];\n  }\n});\nconst filteredItems = computed(() => store.filteredItems);\n\nconst companyDescription = (description) => {\n  if (description.length > 200) {\n    return description.substring(0, 200) + \"...\";\n  } else {\n    return description;\n  }\n};\n\nconst filter = computed({\n  get: () => store.filter,\n  set: (value) => (store.filter = value),\n});\n\nonMounted(() => {\n  store.fetchData();\n  store.fetchTags();\n});\n\nconst loadMore = () => {\n  store.loadMore();\n};\n\nconst props = defineProps({\n  checkedValues: {\n    type: Array,\n    required: true,\n  },\n});\n\nconst checkedValues = computed(() => props.checkedValues);\n\n// define a reactive reference for the search input value\nconst searchInputValue = ref(\"\");\n\n// append the checkedValues with the existing filter and search input value\nconst filterWithCheckedValuesAndSearchInput = computed(() => {\n  const filterValue = filter.value.trim();\n  const checkedValuesValue = checkedValues.value.join(\" \");\n  const searchInputValueTrimmed = searchInputValue.value.trim().toLowerCase();\n  const tags = ref([]);\n\n  let result = \"\";\n\n  if (filterValue) {\n    result += filterValue + \" \";\n  }\n\n  if (checkedValuesValue) {\n    result += checkedValuesValue + \" \";\n  }\n\n  if (searchInputValueTrimmed) {\n    result += searchInputValueTrimmed;\n  }\n\n  return result.trim() || \"Type to filter...\";\n});\n\nonMounted(async () => {\n  const response = await fetch(`http://35.153.67.2/api/tags/`);\n  tags.value = await response.json();\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAkEA,UAAA,QAAA,aAAA;AACA,UAAA,OAAA,SAAA,MAAA;AACA,UAAA,MAAA,KAAA,SAAA,GAAA;AACA,eAAA,MAAA,KAAA,MAAA,GAAA,CAAA;AAAA,MACA,OAAA;AACA,eAAA;MACA;AAAA,IACA,CAAA;AACA,UAAA,gBAAA,SAAA,MAAA,MAAA,aAAA;AAEA,UAAA,qBAAA,CAAA,gBAAA;AACA,UAAA,YAAA,SAAA,KAAA;AACA,eAAA,YAAA,UAAA,GAAA,GAAA,IAAA;AAAA,MACA,OAAA;AACA,eAAA;AAAA,MACA;AAAA,IACA;AAEA,UAAA,SAAA,SAAA;AAAA,MACA,KAAA,MAAA,MAAA;AAAA,MACA,KAAA,CAAA,UAAA,MAAA,SAAA;AAAA,IACA,CAAA;AAkBA,UAAA,gBAAA,SAAA,MAAA,MAAA,aAAA;AAGA,UAAA,mBAAA,IAAA,EAAA;AAGA,UAAA,wCAAA,SAAA,MAAA;AACA,YAAA,cAAA,OAAA,MAAA,KAAA;AACA,YAAA,qBAAA,cAAA,MAAA,KAAA,GAAA;AACA,YAAA,0BAAA,iBAAA,MAAA,KAAA,EAAA,YAAA;AACA,UAAA,CAAA,CAAA;AAEA,UAAA,SAAA;AAEA,UAAA,aAAA;AACA,kBAAA,cAAA;AAAA,MACA;AAEA,UAAA,oBAAA;AACA,kBAAA,qBAAA;AAAA,MACA;AAEA,UAAA,yBAAA;AACA,kBAAA;AAAA,MACA;AAEA,aAAA,OAAA,KAAA,KAAA;AAAA,IACA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}